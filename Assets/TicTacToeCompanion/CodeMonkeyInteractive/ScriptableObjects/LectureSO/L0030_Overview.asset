%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3f6a93b863ca8314695b382c0c8c2b3d, type: 3}
  m_Name: L0030_Overview
  m_EditorClassIdentifier: 
  lectureCode: 30
  lectureSectionNumber: 3
  lectureName: Overview
  lectureTitle: Overview
  frequentlyAskedQuestionListSO: {fileID: 11400000, guid: 211a6877f2357fd4ea60c1eb534ff85b,
    type: 2}
  quizListSO: {fileID: 11400000, guid: bfe394a4ab74a60458c4e29c9777bd76, type: 2}
  exerciseListSO: {fileID: 11400000, guid: 9f5628c5b75a4704a9976c95470b212b, type: 2}
  lectureDescription: "<h1>Lecture Summary: Course Overview</h1><p>In this lecture,
    we covered a quick overview of the entire course. It starts from scratch, from
    a <strong>completely empty </strong>project, guiding you step-by-step to create
    a multiplayer Tic Tac Toe game. Key topics include setting up the grid, using
    Netcode for GameObjects, implementing <strong>RPCs </strong>and <strong>NetworkVariables</strong>,
    synchronizing player actions, and handling game states like wins, ties, and rematches.</p><p><br></p><p><br></p><p>Here
    you\u2019ll learn <strong>clean coding practices</strong>, I am teaching you
    code just how I would write in my own <strong>professional indie games</strong>,
    such as separating logic and visuals, Awake() vs Start(), and explore multiplayer
    tools like Lobby and Relay.</p><p>By the end, you\u2019ll have a polished game
    and foundational multiplayer skills to build more advanced games. Let\u2019s
    get to it!</p><p><br></p><p><br></p>"
