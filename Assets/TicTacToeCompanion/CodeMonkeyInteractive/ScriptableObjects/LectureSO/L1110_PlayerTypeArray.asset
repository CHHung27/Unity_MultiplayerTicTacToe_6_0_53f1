%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3f6a93b863ca8314695b382c0c8c2b3d, type: 3}
  m_Name: L1110_PlayerTypeArray
  m_EditorClassIdentifier: 
  lectureCode: 1110
  lectureSectionNumber: 11
  lectureName: PlayerTypeArray
  lectureTitle: Player Type Array
  frequentlyAskedQuestionListSO: {fileID: 11400000, guid: 2a0b76779e3675c4b9130e520335e93f,
    type: 2}
  quizListSO: {fileID: 11400000, guid: 47fbebe20d16f4d449583064c80d217a, type: 2}
  exerciseListSO: {fileID: 11400000, guid: 9f5628c5b75a4704a9976c95470b212b, type: 2}
  lectureDescription: "<h1>Lecture Summary: Player Type Array</h1><p>In this lecture,
    we resolved the issue of players being able to place objects on an already occupied
    grid position by introducing a <strong>2D PlayerType array </strong>to track
    the board state.</p><p>We created a private <strong>PlayerType[,] playerTypeArray
    </strong>to represent the <strong>3x3 </strong>grid and initialized it in Awake,
    setting all positions to <strong>PlayerType.None </strong>by default. When a
    player attempts to take a turn, the game now checks if the grid position is already
    occupied.</p><p>If the position is empty, it updates the array with the current
    player type. Testing confirmed that players can no longer place objects on occupied
    positions, ensuring valid turns. The board state is now properly tracked\u2014great
    progress!</p>\r\n<p>C# Course - Multidimensional Arrays [04:45:04] <a href=\"https://youtu.be/qZpMX8Re_2Q?t=17104\"
    target=\"_blank\" style=\"background-color: rgb(255, 255, 255);\">https://youtu.be/qZpMX8Re_2Q?t=17104</a></p>\r\n##REF##video_small,
    qZpMX8Re_2Q, Learn C# FREE Tutorial Course Beginner to Advanced! [12 HOURS]##REF##\r\n"
