%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3f6a93b863ca8314695b382c0c8c2b3d, type: 3}
  m_Name: L1170_SoundEffectsAndMusic
  m_EditorClassIdentifier: 
  lectureCode: 1170
  lectureSectionNumber: 17
  lectureName: SoundEffectsAndMusic
  lectureTitle: Sound Effects and Music
  frequentlyAskedQuestionListSO: {fileID: 11400000, guid: 6be1baf9fdaeede4e9a2d97e8585d4bb,
    type: 2}
  quizListSO: {fileID: 11400000, guid: 2195b8ea0f8b8ff47976958bf93fc364, type: 2}
  exerciseListSO: {fileID: 11400000, guid: 9f5628c5b75a4704a9976c95470b212b, type: 2}
  lectureDescription: '<h1>Lecture Summary: Sound Effects and Music</h1><p>In this
    lecture, we added sound effects and background music to enhance the gameplay
    experience. The implementation was <strong>straightforward</strong>, focusing
    on simplicity since our game doesn''t require complex audio systems.</p><p>We
    created a <strong>PlaceSfx prefab </strong>with an <strong>AudioSource </strong>component
    for the sound effect played when placing an object. This prefab was instantiated
    and destroyed locally, avoiding unnecessary network synchronization to <strong>reduce
    bandwidth usage.</strong></p><p>For win and lose sounds, we added separate prefabs
    (winSfxPrefab and loseSfxPrefab) and played them based on the game result. These
    were also instantiated and destroyed locally to keep things efficient.</p><p>A
    <strong>SoundManager </strong>was introduced to handle all audio logic, ensuring
    clean and <strong>decoupled code. </strong>The GameManager triggers events, and
    the SoundManager listens to these events to play the appropriate sounds.</p><p>For
    <strong>music, </strong>we added a <strong>looping </strong>AudioSource that
    continuously plays background music throughout the game. This was set up as a
    simple, non-interactive element.</p><p>After testing, all sound effects and music
    played correctly on both the server and client, enhancing the overall experience
    without <strong>unnecessary network overhead.</strong> The game now feels more
    polished with satisfying audio feedback!</p>'
